/*! toney0.1.0-beta2013-08-09 */
var app=app||{};!function(a){"use strict";app.AppView=Backbone.View.extend({el:"#toneyApp",events:{"click #playPause":"togglePlayPause"},initialize:function(){this.$loadingImage=a("<img>",{src:"images/processing.gif",id:"loadingImage"}),this.$playPauseButton=a("<input>",{type:"button",id:"playPause",value:"play"}),this.$footer=a("<footer>",{id:"playPause"}),this.$gameWindow=a("<canvas>",{id:"gamewindow"}),this.$gameWindow[0].width=560,this.$gameWindow[0].height=315,this.$el.append(this.$gameWindow,[this.$footer,this.$playPauseButton]),this.$el.parent().append(this.$loadingImage),app.spectrogram=new app.SpectrogramModel,app.game=new app.GameModel,app.game.ctx=this.$gameWindow[0].getContext("2d"),console.log(app.game.ctx),app.gameView=new app.GameView({game:app.game}),this.listenTo(app.spectrogram,"stateChanged",this.render),this.render()},render:function(){app.spectrogram.get("processing")?(a(this.el).hide(),this.$loadingImage.show()):(a(this.el).show(),this.$loadingImage.hide(),app.spectrogram.get("playing")?(console.log("rendering"),this.$playPauseButton.prop("value","Pause"),this.$footer.html("listening to the soundfile: </br>"+app.spectrogram.get("soundfileSource"))):(this.$playPauseButton.prop("value","Play"),this.$footer.text("please speak into the microphone")))},togglePlayPause:function(){app.spectrogram.inputToggle(),console.log("toggled play pause")}})}(jQuery);var app=app||{};!function(){"use strict";app.GameModel=Backbone.Model.extend({defaults:{player:null,reference:null,maxLength:50,maxAmplitude:5,maxStars:3},initialize:function(){this.set({reference:new app.TonelineModel({watch:"soundfile:updated"})}),this.set({player:new app.TonelineModel({watch:"microphone:updated"})}),this.listenTo(this.get("reference"),"tonelineReset",this.updateReferenceLine),this.listenTo(this.get("player"),"tonelineReset",this.getPlayerScore)},update:function(){this.trigger("renderGame")},getAverage:function(a){this._sum+=a.getLineAmplitude(),this._numOfLines++,this._avg=this._sum/this._numOfLines},getPlayerScore:function(a){if(null!==this._referenceLine){var b=a.getSize(),c=this._referenceLine.getSize(),d=Math.max(b[0],c[0]),e=Math.max(Math.abs(b[1]),Math.abs(c[1])),f=.5,g=Math.abs(b[0]-c[0]),h=Math.abs(b[1]-c[1]),i=0===d?1*f:f*(1-g/d),j=0===e?1*(1-f):(1-f)*(1-h/e),k=Math.round(Math.min(i+j,1)*this.get("maxStars"));console.log("longest: "+d+" highest: "+e),console.log("xDiff: "+g+" yDiff: "+h),console.log("xScore: "+i+" yScore: "+j),this.trigger("game:newScore",k)}},updateReferenceLine:function(a){this._referenceLine=a.clone(),console.log("new reference toneline: "+a)}})}();var app=app||{};!function(){app.GameView=Backbone.View.extend({initialize:function(){this.ctx=app.game.ctx,this.player=new app.TonelineView({model:app.game.get("player"),color:["#BB0805","#FF4D2E"]}),this.reference=new app.TonelineView({model:app.game.get("reference"),color:["#0BB400","#2EFE3E"]}),this.score=new app.ScoreView,this.listenTo(app.game.get("reference"),"tonelineChange",this.render),this.listenTo(app.game.get("player"),"tonelineChange",this.render),this.listenTo(app.game,"game:newScore",this.drawScore)},render:function(){this.clearCanvas(),this.reference.draw(),this.player.draw()},drawScore:function(a){this.score.draw(a)},clearCanvas:function(){var a=this.ctx,b=a.canvas;a.clearRect(0,0,b.width,b.height)}})}();var app=app||{};!function(){app.ScoreView=Backbone.View.extend({scale:20,margin:20,colors:["#FFFF33","#FFFF66"],initialize:function(){this.ctx=app.game.ctx},draw:function(a){this.line;var b=this.ctx,c=b.canvas,d=this.scale,e=this.margin,f=app.game.get("maxStars"),g=a,h=(d+e)*(f-1)+d,i=this.colors,j=(c.width-h)/2,k=.9*(c.height-d),l=b.createLinearGradient(0,0,(d+e)*g,0);l.addColorStop(0,i[0]),l.addColorStop(1,i[1]),b.fillStyle=l;for(var m=d+e,n=0;g>n;n++)this.drawStar(b,j,k,d,5,.5,!0),j+=m;for(n=g;f>n;n++)this.drawStar(b,j,k,d,5,.5,!1),j+=m},drawStar:function(a,b,c,d,e,f,g){a.save(),a.beginPath(),a.translate(b,c),a.moveTo(0,0-d);for(var h=0;e>h;h++)a.rotate(Math.PI/e),a.lineTo(0,0-d*f),a.rotate(Math.PI/e),a.lineTo(0,0-d);a.closePath(),g?a.fill():(a.lineWidth=1,a.strokeStyle="grey",a.stroke()),a.restore()}})}();var app=app||{};!function(){"use strict";var a=Backbone.Model.extend({initialize:function(a){this._analyser=a}}),b=a.extend({defaults:{index:0,name:"microphone"},execute:function(){this._analyser.connectMicrophone(),this._analyser.startSoundAnalysis()},exit:function(){this._analyser.stopSoundAnalysis(),this._analyser.disconnectMicrophone()},update:function(){this._analyser.trigger("microphone:updated",this._analyser._highpassSpectrogram)}}),c=a.extend({defaults:{index:1,name:"soundfile"},execute:function(){this._analyser.connectSoundfile(),this._analyser.startSoundAnalysis()},exit:function(){this._analyser.stopSoundAnalysis(),this._analyser.disconnectSoundfile()},update:function(){this._analyser.trigger("soundfile:updated",this._analyser._highpassSpectrogram)}}),d=a.extend({defaults:{index:2,name:"processing"},execute:function(){this._analyser.set({processing:!0}),console.log("processing ...")},exit:function(){this._analyser.set({processing:!1}),console.log("finished processing")}}),e=null;app.SpectrogramModel=Backbone.Model.extend({defaults:{fftSize:2048,spectrogramSize:300,smoothing:0,bandpass:{fMin:160,fMax:3400,qFactor:.05},soundfileSource:"audio/ma_short.mp3",currState:null,downsampleRate:4,playing:!1,processing:!1,externalAnalyser:!1,audioNodes:[]},initialize:function(){for(var a=["","ms","moz","webkit","o"],f=0;f<a.length&&(!window.AudioContext||!navigator.getUserMedia);++f)window.AudioContext=window[a[f]+"AudioContext"],navigator.getUserMedia=navigator[a[f]+"GetUserMedia"];window.AudioContext&&navigator.getUserMedia||alert('THIS APPlICATION REQUIRES "Web Audio Input" ENABLED IN chrome://flags.'),e=new AudioContext,this._states={microphone:new b(this),soundfile:new c(this),processing:new d(this)},this.changeState(this._states.processing),this._analysisOutputNode=this.get("externalAnalyser")?this.initializeDSP():this.initializeAnalyser(),this.initializeMicrophone(),this.once("microphone:ready",this.initializeSoundfile,this),this.once("soundfile:loaded",this.createSoundFileNode,this),this.once("soundfile:ready",this.initializeAudioGraph,this),this.once("audiograph:ready",this.inputToggle,this),this.on("soundfile:ended",this.resetSoundfile,this)},initializeMicrophone:function(){navigator.getUserMedia({audio:!0},this.createMicrophoneNode.bind(this),function(a){console.log(a)})},createMicrophoneNode:function(a){this._microphoneInput=e.createMediaStreamSource(a),console.log("mic node created"),this.trigger("microphone:ready")},connectMicrophone:function(){this._microphoneInput.connect(this._analysisInputNode)},disconnectMicrophone:function(){this._microphoneInput.disconnect()},initializeSoundfile:function(){this._audio=new Audio(this.get("soundfileSource")),this._audio.preload=!1,this._audio.addEventListener("canplay",function(){this.trigger("soundfile:loaded")}.bind(this)),this._audio.addEventListener("ended",function(){this.trigger("soundfile:ended")}.bind(this)),this._audio.autoplay=!1},createSoundFileNode:function(){this._soundFileInput=e.createMediaElementSource(this._audio),this.trigger("soundfile:ready")},connectSoundfile:function(){this._soundFileInput.connect(this._analysisInputNode),this._soundFileInput.connect(e.destination),this._audio.play(),this.set({playing:!0})},disconnectSoundfile:function(){this._soundFileInput.disconnect(),this._audio.pause(),this.set({playing:!1})},resetSoundfile:function(){this.initializeSoundfile(),this.once("soundfile:loaded",this.createSoundFileNode,this),this.once("soundfile:ready",this.inputToggle,this)},initializeAnalyser:function(){var a=e.createAnalyser();return a.fftSize=this.get("fftSize"),a.smoothingTimeConstant=this.smoothing,this._data=new Uint8Array(a.frequencyBinCount),this._spectrogram=new Uint8Array(this.get("spectrogramSize")),a},startSoundAnalysis:function(){this._animationID=this.get("externalAnalyser")?window.requestAnimationFrame(this.updateSpectrogramDSP.bind(this)):window.requestAnimationFrame(this.updateSpectrogram.bind(this))},stopSoundAnalysis:function(){this._animationID&&window.cancelAnimationFrame(this._animationID),this._animationID=0},updateSpectrogram:function(){this._analysisOutputNode.getByteFrequencyData(this._data),this._spectrogram=this._data.subarray(0,this.get("spectrogramSize")-1),this.updateHighpassSpectrogram(),this.get("currState").update(),this._animationID=window.requestAnimationFrame(this.updateSpectrogram.bind(this))},updateHighpassSpectrogram:function(){var a,b,c,d,e;for(b=[-1,-1,5,-1,-1],e=Math.floor(b.length/2),this._highpassSpectrogram=[],c=0;c<this._spectrogram.length;c++)if(c>e&&c<this._spectrogram.length-e){for(a=0,d=0;d<b.length;d++)a+=b[d]*this._spectrogram[c+d-e];a/=b.length,a=Math.min(Math.max(a,0),128),this._highpassSpectrogram[c]=a}else this._highpassSpectrogram[c]=this._spectrogram[c]},updateSpectrogramDSP:function(){this.get("playing")&&(this.get("downsampleRate"),this._fft.forward(this._buffer.data),this._data=this._fft.getDbSpectrum(),this.get("currState").update(),this._animationID=window.requestAnimationFrame(this.updateSpectrogramDSP.bind(this)))},initializeDSP:function(){var a=this.get("fftSize"),b=this.get("downsampleRate"),c=e.sampleRate;console.log(c),this._buffer={fillSize:a/b,data:new Float32Array(a),downsampled:new Float32Array(this.fillSize),upsampled:new Float32Array(a)},this._fft=new RFFT(a,c/b),this._gauss=new WindowFunction(DSP.GAUSS);for(var d=0;a>d;d++)this._buffer.data[d]=0;var f=e.createScriptProcessor(this._buffer.fillSize,1,1);return f.onaudioprocess=function(a){for(var b=a.inputBuffer.getChannelData(0),c=this.fillSize;c<this.data.length;c++)this.data[c-this.fillSize]=this.data[c];for(c=0;c<b.length;c++)this.data[this.data.length-this.fillSize+c]=b[c];console.log("processing and filling buffer")}.bind(this._buffer),f},initializeAudioGraph:function(){var a,b,c,d,f;a=this.get("fftSize"),f=this.get("bandpass"),b=f.fMin,b=f.fMax,d=f.qFactor,this._analysisInputNode=e.createGainNode();var g=this.get("audioNodes"),h=e.createBiquadFilter();h.type=h.LOWPASS,h.frequency.value=c,h.Q.value=d;var i=e.createBiquadFilter();i.type=i.HIGHPASS,i.frequency.value=b,i.Q.value=d;var j=e.createBiquadFilter();j.type=i.PEAKING,j.frequency.value=750,j.Q.value=.16,j.gain.value=3.2,console.log(j.gain);var k=e.createDynamicsCompressor();k.threshold.value=-10,k.release.value=.6,g.push(h),g.push(i),g.push(j),console.log(g),this._analysisInputNode.connect(g[0]);for(var l=0;l<g.length-1;l++)g[l].connect(g[l+1]);g[g.length-1].connect(this._analysisOutputNode),this._analysisOutputNode.connect(e.destination),this.trigger("audiograph:ready")},inputToggle:function(){this.get("playing")||this.get("processing")?this.changeState(this._states.microphone):this.changeState(this._states.soundfile),this.trigger("sourceChanged")},changeState:function(a){var b=this.get("currState");b!==a&&(b&&b.exit(),this.set({currState:a}),this.get("currState").execute(),this.trigger("stateChanged"))}})}();var app=app||{};!function(){app.TonelineView=Backbone.View.extend({tagName:"canvas",lineWidth:20,initialize:function(){this.ctx=app.game.ctx,this.drawingColor=this.options.color,this.listenTo(this.model,"tonelineChange",this.update)},draw:function(){if(this.line){var a=this.line,b=this.ctx,c=b.canvas,d=app.game.get("maxLength"),e=app.game.get("maxAmplitude"),f=a.getSize(),g=f[0],h=f[1],i=this.drawingColor,j=c.width/d,k=c.height/e,l=b.createLinearGradient(0,0,g*j,0);l.addColorStop(0,i[0]),l.addColorStop(1,i[1]),b.lineWidth=this.lineWidth,b.strokeStyle=l,b.lineCap="round";var m=c.width/2-g/2*j,n=c.height/2+h/2*k,o=a.segments;for(var p in o){var q=o[p].k,r=o[p].n,s=-q*k,t=r*j,u=[0,0],v=[t,s];b.transform(1,0,0,1,m,n),b.beginPath(),b.moveTo(u[0],u[1]),b.lineTo(v[0],v[1]),b.stroke(),b.transform(1,0,0,1,-m,-n),n+=s,m+=t}}},update:function(a){this.line=a.clone()}})}();var app=app||{};!function(){"use strict";var a=function(a,b,c,d){for(var e=a.length,f=Math.floor(e/c),g=0;f>g;g++)b[g]=1+g;for(var h=1;c>h;h++)for(g=0;f>g;g++)b[g]*=a[g*h];var i=0;for(g=0;f>g;g++)b[g]>b[i]&&(i=g);var j=0,k=0;for(h=0;e>h;h++)j+=a[h],k+=a[h]*a[h];var l=(k-j*j/e)/e,m=i;return l>d?m:-1},b=function(a){for(var b=a.length,c=0,e=0,f=0,g=0,h=0,i=0;b>i;i++)e+=i,f+=a[i],g+=i*i,h+=a[i]*a[i],c+=a[i]*i;var j=e/b,k=f/b,l=c/b,m=g/b,n=l-j*k,o=m-j*j,p=n/o,q=new d(p,b);return q},c=function(){this.segments=[]};c.prototype.resetLine=function(){this.segments.length=0},c.prototype.clone=function(){var a=new c;return a.segments=this.segments.slice(),a},c.prototype.updateSegment=function(a){this.segments.length>0?this.segments[this.segments.length-1]=a:this.segments[0]=a},c.prototype.getLineAmplitude=function(){var a=0;for(var b in this.segments)a+=this.segments[b].k*this.segments[b].n;return a},c.prototype.getLineLength=function(){var a=0;for(var b in this.segments)a+=this.segments[b].n;return a},c.prototype.getSize=function(){var a=0,b=0;for(var c in this.segments)a+=this.segments[c].n,b+=this.segments[c].k*this.segments[c].n;return b/=a,[a,b]},c.prototype.addSegment=function(a){this.segments.push(a)};var d=function(a,b){this.k=a,this.n=b};app.TonelineModel=Backbone.Model.extend({defaults:{iterations:8,varThreshold:.05},initialize:function(){this.listenTo(app.spectrogram,this.get("watch"),this.update),this.listenTo(app.spectrogram,"sourceChanged",this.resetToneline),this._tones=[],this._line=new c,this._spectrum=[]},update:function(c){this._spectrum.length=0;var d=a(c,this._spectrum,this.get("iterations"),this.get("varThreshold"));if(this._silenceCount<30)if(d>0){this._tones.push(d);var e=b(this._tones);if(!isNaN(e.k)&&!isNaN(e.n)){var f=e.k*this._prevK;-2e-4>f&&e.n>3?(console.log(f),this._line.addSegment(e),this._tones.length=0):this._line.updateSegment(e),this._prevK=e.k,this.trigger("tonelineChange",this._line)}}else this._silenceCount++;else this.resetToneline()},resetToneline:function(){0!==this._line.segments.length&&this.trigger("tonelineReset",this._line),this._tones.length=0,this._line.resetLine(),this._silenceCount=0}})}();