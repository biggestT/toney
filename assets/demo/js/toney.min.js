/*! toney0.1.0-beta2013-07-26 */
var app=app||{};!function(a){"use strict";app.AppView=Backbone.View.extend({el:"#toneyApp",events:{"click #playPause":"togglePlayPause"},initialize:function(){this.playPauseButton=this.$("#playPause"),this.$footer=this.$("#footer"),this.$main=this.$("#main"),this.$toneWindow=a("#toneWindow"),this.$spectrogramWindow=a("#spectrogramWindow"),app.spectrogramModel=new app.SpectrogramModel,app.userToneModel=new app.TonelineModel({spectrogram:app.spectrogramModel,watch:"microphone:updated"}),app.referenceToneModel=new app.TonelineModel({spectrogram:app.spectrogramModel,watch:"soundfile:updated"});var b=this.$toneWindow[0].getContext("2d");app.userToneline=new app.TonelineView({model:app.userToneModel,color:["#BB0805","#FF4D2E"],ctx:b}),app.referenceToneline=new app.TonelineView({model:app.referenceToneModel,color:["#0BB400","#2EFE3E"],ctx:b});var c=this.$spectrogramWindow[0].getContext("2d");app.spectrogramView=new app.SpectrogramView({model:app.spectrogramModel,ctx:c}),this.listenTo(app.spectrogramModel,"stateChanged",this.render),this.render()},render:function(){app.spectrogramModel.get("processing")?(a(this.el).hide(),a("#processingImage").show()):(a(this.el).show(),a("#processingImage").hide(),app.spectrogramModel.get("playing")?(console.log("rendering"),this.playPauseButton.prop("value","Pause"),this.$footer.html("listening to the soundfile: </br>"+app.spectrogramModel.get("soundfileSource"))):(this.playPauseButton.prop("value","Play"),this.$footer.text("please speak into the microphone")))},togglePlayPause:function(){app.spectrogramModel.inputToggle(),console.log("toggled play pause")}})}(jQuery);var app=app||{};!function(){"use strict";var a=Backbone.Model.extend({initialize:function(a){this._analyser=a}}),b=a.extend({defaults:{index:0,name:"microphone"},execute:function(){this._analyser.connectMicrophone(),this._analyser.startSoundAnalysis()},exit:function(){this._analyser.stopSoundAnalysis(),this._analyser.disconnectMicrophone()},update:function(){this._analyser.trigger("microphone:updated",this._analyser._data)}}),c=a.extend({defaults:{index:1,name:"soundfile"},execute:function(){this._analyser.connectSoundfile(),this._analyser.startSoundAnalysis()},exit:function(){this._analyser.stopSoundAnalysis(),this._analyser.disconnectSoundfile()},update:function(){this._analyser.trigger("soundfile:updated",this._analyser._data)}}),d=a.extend({defaults:{index:2,name:"processing"},execute:function(){this._analyser.set({processing:!0}),console.log("processing ...")},exit:function(){this._analyser.set({processing:!1}),console.log("finished processing")}}),e=null;app.SpectrogramModel=Backbone.Model.extend({defaults:{fftSize:2048,smoothing:.5,bandpass:{fMin:160,fMax:3400,qFactor:.05},soundfileSource:"audio/ma_short.mp3",currState:null,playing:!1,processing:!1},initialize:function(){for(var a=["","ms","moz","webkit","o"],f=0;f<a.length&&(!window.AudioContext||!navigator.getUserMedia);++f)window.AudioContext=window[a[f]+"AudioContext"],navigator.getUserMedia=navigator[a[f]+"GetUserMedia"];window.AudioContext&&navigator.getUserMedia||alert('THIS APPlICATION REQUIRES "Web Audio Input" ENABLED IN chrome://flags.'),e=new AudioContext,this._states={microphone:new b(this),soundfile:new c(this),processing:new d(this)},this.changeState(this._states.processing),this.initializeAnalyser(),this.initializeMicrophone(),this.once("microphone:ready",this.initializeSoundfile,this),this.once("soundfile:loaded",this.createSoundFileNode,this),this.once("soundfile:ready",this.initializeAudioGraph,this),this.once("audiograph:ready",this.inputToggle,this),this.on("soundfile:ended",this.soundfileEnded,this)},initializeMicrophone:function(){navigator.getUserMedia({audio:!0},this.createMicrophoneNode.bind(this),function(a){console.log(a)})},createMicrophoneNode:function(a){this._microphoneInput=e.createMediaStreamSource(a),console.log("mic node created"),this.trigger("microphone:ready")},connectMicrophone:function(){this._microphoneInput.connect(this._analysisInputNode)},disconnectMicrophone:function(){this._microphoneInput.disconnect()},initializeSoundfile:function(){this._audio=new Audio(this.get("soundfileSource")),this._audio.preload=!1,this._audio.addEventListener("canplay",function(){this.trigger("soundfile:loaded")}.bind(this)),this._audio.addEventListener("ended",function(){this.trigger("soundfile:ended")}.bind(this)),this._audio.autoplay=!1},createSoundFileNode:function(){this._soundFileInput=e.createMediaElementSource(this._audio),this.trigger("soundfile:ready")},connectSoundfile:function(){this._soundFileInput.connect(this._analysisInputNode),this._soundFileInput.connect(e.destination),this._audio.play(),this.set({playing:!0})},disconnectSoundfile:function(){this._soundFileInput.disconnect(),this._audio.pause(),this.set({playing:!1})},soundfileEnded:function(){this.initializeSoundfile(),this.once("soundfile:loaded",this.createSoundFileNode,this),this.once("soundfile:ready",this.inputToggle,this)},initializeAnalyser:function(){this._analyser=e.createAnalyser(),this._analyser.fftSize=this.get("fftSize"),this._analyser.smoothingTimeConstant=this.smoothing,this._data=new Uint8Array(this._analyser.frequencyBinCount)},startSoundAnalysis:function(){this._animationID=window.requestAnimationFrame(this.updateSpectrogram.bind(this))},stopSoundAnalysis:function(){this._animationID&&window.cancelAnimationFrame(this._animationID),this._animationID=0},updateSpectrogram:function(){this._analyser.getByteFrequencyData(this._data),this.get("currState").update(),this._animationID=window.requestAnimationFrame(this.updateSpectrogram.bind(this))},initializeAudioGraph:function(){var a,b,c,d,f,g,h;c=this.get("fftSize"),h=this.get("bandpass"),d=h.fMin,d=h.fMax,g=h.qFactor,this._analysisInputNode=e.createGainNode(),a=e.createBiquadFilter(),a.type=a.LOWPASS,a.frequency.value=f,a.Q=g,b=e.createBiquadFilter(),b.type=b.HIGHPASS,b.frequency.value=d,b.Q=g,this._analysisInputNode.connect(a),a.connect(b),b.connect(this._analyser),this.trigger("audiograph:ready")},inputToggle:function(){this.get("playing")||this.get("processing")?this.changeState(this._states.microphone):this.changeState(this._states.soundfile),this.trigger("sourceChanged")},changeState:function(a){var b=this.get("currState");b!==a&&(b&&b.exit(),this.set({currState:a}),this.get("currState").execute(),this.trigger("stateChanged"))}})}();var app=app||{};!function(){"use strict";app.SpectrogramView=Backbone.View.extend({tagName:"canvas",colors:{microphone:"rgba(255, 0, 0, ",soundfile:"rgba(0, 255, 0, "},initialize:function(){this.ctx=this.options.ctx,this.spectrogramSize=this.model.get("fftSize")/2,this.xLength=500,this.count=0,this.listenTo(this.model,"sourceChanged",this.changeColor),this.listenTo(this.model,"soundfile:updated",this.update),this.listenTo(this.model,"microphone:updated",this.update)},update:function(a){this.count++,this.drawSpectrogramPart(a,this.count),this.count>this.xLength&&(this.count=0)},changeColor:function(){this.drawingColor=this.colors[this.model.get("currState").get("name")]},clearCanvas:function(){var a=this.ctx.canvas;this.ctx.clearRect(0,0,a.width,a.height)},drawSpectrogramPart:function(a,b){for(var c=this.ctx,d=c.canvas,e=this.xLength,f=this.spectrogramSize,g=this.drawingColor,h=d.width/e,i=-d.height/f,j=b*h,k=d.height,l=0;l<a.length;l++)c.fillStyle=g+4*(a[l]/255)+")",c.fillRect(j,k,h,i),k+=i}})}();var app=app||{};!function(){var a=Backbone.Model.extend({initialize:function(a,b){this.owner=a,this.set({name:b}),this._testData=[],this._testCount=0,this._maxCount=500},storeTestData:function(a){this._testCount<this._maxCount?(0===this._testData.length&&(this._testStart=(new Date).getTime()),this._testData[this._testCount]=Array.apply([],a),this._testCount++):this.owner.exportTestData()},clearTestData:function(){this._testData=[],this._testCount=0},getTestData:function(){return this._testData},getTestTime:function(){var a=(new Date).getTime()-this._testStart;return a}});app.TestView=Backbone.View.extend({initialize:function(){this.sourceStates={},this.sourceStates.microphone=new a(this,"microphone"),this.sourceStates.soundfile=new a(this,"soundfile"),this.sourceState=this.sourceStates.soundfile,this.listenTo(this.model,"stateChanged",this.nextState),this.listenTo(this.model,"spectrogramChange",this.update)},exportTestData:function(){var a=this.sourceState,b=a.get("name"),c=this.model.get("bandpass"),d=this.model.get("fftSize");if("processing"!=b){var e=a.getTestData(),f=a.getTestTime(),g="tTest = "+f+";";g+="res = "+d+";",g+="fLimits = ["+c.fMin+" "+c.fMax+" ];",g+=b+" = [";for(var h=0;h<e.length;h++){for(var i=0;i<e[h].length;i++)g+=e[h][i]+" ";h!=e.length-1&&(g+=";")}g+="];",g=[g],window.URL=window.webkitURL||window.URL;var j=new Blob(g,{type:"text/plain"}),k=document.getElementById("downloadFile");k.hidden="",k.href=window.URL.createObjectURL(j),k.download=b+d+c.fMin+c.fMax+".m",k.textContent="Download spectogram of latest recorded "+b+" data as an m-file!",a.clearTestData()}},nextState:function(){this.exportTestData(),this.sourceState=this.sourceState==this.sourceStates.microphone?this.sourceStates.soundfile:this.sourceStates.microphone},update:function(a){this.sourceState.storeTestData(a)}})}();var app=app||{};!function(){app.TonelineView=Backbone.View.extend({tagName:"canvas",lineWidth:15,initialize:function(){this.ctx=this.options.ctx,this.xLength=50,this.drawingColor=this.options.color,this.lines=[],this.listenTo(this.model,"tonelineChange",this.update),this.listenTo(this.model,"tonelineReset",this.clearCanvas)},draw:function(){this.clearCanvas(),this.drawGradientLine()},drawToneline:function(a,b){var c=this.ctx,d=c.canvas,e=this.xLength,f=this.drawingColor,g=d.width/e,h=c.createLinearGradient(0,0,b*g,d.height);h.addColorStop(0,f[0]),h.addColorStop(1,f[1]),c.lineWidth=this.lineWidth,c.strokeStyle=h,c.lineCap="round";for(var i=d.width/2-b/2*g,j=d.height/2,k=0;k<a.length;k++){var l=a[k][0],m=a[k][1],n=-l*d.height,o=m*g,p=[0,0],q=[o,n];c.transform(1,0,0,1,i,j),c.beginPath(),c.moveTo(p[0],p[1]),c.lineTo(q[0],q[1]),c.stroke(),c.transform(1,0,0,1,-i,-j),j+=n,i+=o}},clearCanvas:function(){var a=this.ctx.canvas;this.ctx.clearRect(0,0,a.width,a.height)},update:function(a){this.clearCanvas(),this.lines[0]=a,this.drawToneline(this.lines,this.lines[0][1])}})}();var app=app||{};!function(){"use strict";app.TonelineModel=Backbone.Model.extend({defaults:{iterations:8,varThreshold:3,maxAmplitude:.1},initialize:function(){this._spectrogram=this.get("spectrogram"),this.listenTo(this._spectrogram,this.get("watch"),this.update),this.initializeArrays()},initializeArrays:function(){this._tones=[],this._line=[],this._spectrum=[]},getPitchHPS:function(a){this._spectrum.length=0;var b=this.get("iterations");this.get("varThreshold");for(var c=a.length,d=Math.floor(c/b),e=this._spectrum,f=0;d>f;f++)e[f]=1+f;for(var g=1;b>g;g++)for(f=0;d>f;f++)e[f]*=a[f*g];var h=0;for(f=0;d>f;f++)e[f]>e[h]&&(h=f);var i=0,j=0;for(g=0;c>g;g++)i+=a[g],j+=a[g]*a[g];var k=h/d;return k},getLinearApproximation:function(a){for(var b=a.length,c=0,d=0,e=0,f=0,g=0,h=0;b>h;h++)d+=h,e+=a[h],f+=h*h,g+=a[h]*a[h],c+=a[h]*h;var i=d/b,j=e/b,k=c/b,l=f/b,m=k-i*j,n=l-i*i,o=m/n;return[o,b]},update:function(a){var b=this.getPitchHPS(a);if(b>0){this._tones.push(b);var c=this.getLinearApproximation(this._tones);c[0]=c[0]/this.get("maxAmplitude"),this.trigger("tonelineChange",c)}else this._tones.length=0}})}();